// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(UniversidadEvaluacionContext))]
    [Migration("20231112022036_CreateMig")]
    partial class CreateMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Alumno_Se_Matricula_Asignatura", b =>
                {
                    b.Property<int>("IdAsignaturaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdAlumnoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdCursoEscolarFk")
                        .HasColumnType("int");

                    b.HasKey("IdAsignaturaFk", "IdAlumnoFk", "IdCursoEscolarFk");

                    b.HasIndex("IdAlumnoFk");

                    b.HasIndex("IdCursoEscolarFk");

                    b.ToTable("Alumno_Se_Matricula_Asignatura", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Creditos")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("Creditos");

                    b.Property<int>("Cuatrimestre")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("Cuatrimestre");

                    b.Property<int>("Cursos")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("Cursos");

                    b.Property<int>("IdGradoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesorFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdGradoFk");

                    b.HasIndex("IdProfesorFk");

                    b.ToTable("Asignatura", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.CursoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Anyo_Fin")
                        .HasColumnType("int")
                        .HasColumnName("AñoFinal");

                    b.Property<int>("Anyo_Inicio")
                        .HasColumnType("int")
                        .HasColumnName("AñoInicial");

                    b.HasKey("Id");

                    b.ToTable("CursoEscolar", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Grado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Grado", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellido1");

                    b.Property<string>("Apellido2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellido2");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("Ciudad");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("Date")
                        .HasColumnName("Fecha_Nacimiento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar")
                        .HasColumnName("Genero");

                    b.Property<string>("Nif")
                        .HasMaxLength(9)
                        .HasColumnType("varchar")
                        .HasColumnName("Nif");

                    b.Property<string>("Nombre")
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar")
                        .HasColumnName("TipoPersona");

                    b.HasKey("Id");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamentoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesorFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamentoFk");

                    b.HasIndex("IdProfesorFk");

                    b.ToTable("Profesor", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Alumno_Se_Matricula_Asignatura", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Alumno")
                        .WithMany("Alumno_se_Matricula_asignatura")
                        .HasForeignKey("IdAlumnoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Asignatura", "Asignatura")
                        .WithMany("Alumno_se_Matricula_asignaturas")
                        .HasForeignKey("IdAsignaturaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.CursoEscolar", "CursoEscolar")
                        .WithMany("Alumno_se_Matricula_asignaturas")
                        .HasForeignKey("IdCursoEscolarFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Asignatura");

                    b.Navigation("CursoEscolar");
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.HasOne("Dominio.Entities.Grado", "Grado")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdGradoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Profesor", "Profesor")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdProfesorFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.HasOne("Dominio.Entities.Departamento", "Departamento")
                        .WithMany("Profesores")
                        .HasForeignKey("IdDepartamentoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("Profesores")
                        .HasForeignKey("IdProfesorFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.Navigation("Alumno_se_Matricula_asignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.CursoEscolar", b =>
                {
                    b.Navigation("Alumno_se_Matricula_asignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("Dominio.Entities.Grado", b =>
                {
                    b.Navigation("Asignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Navigation("Alumno_se_Matricula_asignatura");

                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.Navigation("Asignaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
